ARG SYSBASE=almalinux:9
FROM ${SYSBASE} as system-build

RUN mkdir /mnt/sys-root; \
    dnf install -y \
    --installroot /mnt/sys-root \
    --releasever 9 \
    --setopt install_weak_deps=false \
    --nodocs \
    almalinux-release \
    bash \
    binutils \
    coreutils \
    coreutils-common \
    crypto-policies-scripts \
    curl \
    findutils \
    hostname \
    iputils \
    glibc-minimal-langpack \
    krb5-libs \
    less \
    libcurl \
    rootfiles \
    systemd \
    tar \
    vim-minimal \
    yum \
    xz \
    ; \
    echo '%_install_langs en_US.UTF-8' > /etc/rpm/macros.image-language-conf ;\
    dnf reinstall -y \
    --installroot /mnt/sys-root \
    --releasever 9 \
    --setopt install_weak_deps=false \
    --nodocs \
    krb5-libs ; \
    dnf --installroot /mnt/sys-root clean all; 

# Additional hacks for kickstart file and backward compatable support   /mnt/sys-root/var/lib/dnf/history*  
RUN rm -rf /mnt/sys-root/var/log/dnf* /mnt/sys-root/var/log/yum.* /mnt/sys-root/usr/share/i18n/charmaps /mnt/sys-root/usr/share/i18n/locales ; \
    rm -rf /mnt/sys-root/var/cache/dnf/* /mnt/sys-root/var/lib/dnf/repos /mnt/sys-root/boot /mnt/sys-root/dev/null ; \
    rm -rf /mnt/sys-root/var/log/hawkey.log /mnt/sys-root/var/log/*  ; \
    mkdir -p /mnt/sys-root/run/lock; \
    /bin/date +%Y%m%d_%H%M > /mnt/sys-root/etc/BUILDTIME; \
    echo '%_install_langs C.utf8' > /mnt/sys-root/etc/rpm/macros.image-language-conf; \
    echo 'LANG="C.utf8"' >  /mnt/sys-root/etc/locale.conf; \
    echo 'container' > /mnt/sys-root/etc/dnf/vars/infra; \
    touch /mnt/sys-root/etc/.pwd.lock; \
    chmod 600 /mnt/sys-root/etc/.pwd.lock; \
    touch /mnt/sys-root/run/utmp ;\
    chmod 664 /mnt/sys-root/run/utmp ;\
    echo '0.0 0 0.0' > /mnt/sys-root/etc/adjtime; \
    echo '0' >> /mnt/sys-root/etc/adjtime; \
    echo 'UTC' >> /mnt/sys-root/etc/adjtime; \
    echo '# This file has been generated by the Anaconda Installer.' > /mnt/sys-root/etc/sysconfig/sshd-permitrootlogin ;\
    echo '# Allow root to log in using ssh. Remove this file to opt-out.' >> /mnt/sys-root/etc/sysconfig/sshd-permitrootlogin ;\
    echo 'PERMITROOTLOGIN="-oPermitRootLogin=yes"' >> /mnt/sys-root/etc/sysconfig/sshd-permitrootlogin ;\
    echo 'KEYMAP="us"' > /mnt/sys-root/etc/vconsole.conf; \
    echo 'FONT="eurlatgr"' >> /mnt/sys-root/etc/vconsole.conf; \
    rm -rf /mnt/sys-root/usr/share/locale/en_US@piglati* /mnt/sys-root/run/blkid /mnt/sys-root/var/cache/dnf/.gpgkeyschecked.yum ; \
    rm -f /mnt/sys-root/etc/machine-id; \
    touch /mnt/sys-root/etc/machine-id;

# AL9 specific hacks    
RUN mkdir -p /mnt/sys-root/var/cache/private /mnt/sys-root/var/lib/private /mnt/sys-root/var/lib/systemd/coredump /mnt/sys-root/var/lib/tpm2-tss/system/keystore ;\
    mkdir -p /mnt/sys-root/run/cryptsetup /mnt/sys-root/run/lock/subsys /mnt/sys-root/run/log /mnt/sys-root/run/user /mnt/sys-root/run/tpm2-tss/eventlog ;\
    mkdir -p /mnt/sys-root/run/systemd/ask-password /mnt/sys-root/run/systemd/machines /mnt/sys-root/run/systemd/seats /mnt/sys-root/run/systemd/sessions /mnt/sys-root/run/systemd/shutdown /mnt/sys-root/run/systemd/users ;\
    chmod 700 /mnt/sys-root/var/cache/private ; \
    chmod 700 /mnt/sys-root/var/lib/private ; \
    chmod 700 /mnt/sys-root/run/cryptsetup ; \
    groupadd -R '/mnt/sys-root/' -r -p '!*' -g 996 sgx && groupadd -R '/mnt/sys-root/' -r -p '!*' -g 995 systemd-oom ; \
    useradd -R '/mnt/sys-root/' -r -c 'systemd Userspace OOM Killer' -g 995 -u 995 -s '/usr/sbin/nologin' -M -d '/' systemd-oom ; \
    sed -i "/sgx/d" /mnt/sys-root/etc/group- ; \
    sed -i "/sgx/d" /mnt/sys-root/etc/gshadow- ; \
    cd /mnt/sys-root/etc ; \
    ln -s ../usr/share/zoneinfo/UTC localtime ;

# Almalinux default build
FROM scratch as stage2
COPY --from=system-build /mnt/sys-root/ /

ENV container docker
RUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \
systemd-tmpfiles-setup.service ] || rm -f $i; done); \
rm -f /lib/systemd/system/multi-user.target.wants/*;\
rm -f /etc/systemd/system/*.wants/*;\
rm -f /lib/systemd/system/local-fs.target.wants/*; \
rm -f /lib/systemd/system/sockets.target.wants/*udev*; \
rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \
rm -f /lib/systemd/system/basic.target.wants/*;\
rm -f /lib/systemd/system/anaconda.target.wants/*;

ENV GOSU_VERSION 1.14
RUN set -eux; \
    ARCH="$(arch)"; \
    case "${ARCH}" in \
      aarch64) \
        march="arm64" ; \
        ;; \
      ppc64le) \
        march="ppc64el" ; \
        ;; \
      s390x) \
        march="s390x" ; \
        ;; \         
      x86_64) \
        march="amd64" ; \
        ;; \
      *) \
        echo "Unsupported arch: ${ARCH}"; \
        exit 1; \
        ;; \
    esac; \
    URL="https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-${march}" ; \
    curl -o /tmp/gosu -L "${URL}" ;\
    curl -o /tmp/gosu.asc -L "${URL}.asc" ;\
# verify the signature
    export GNUPGHOME="$(mktemp -d)"; \
    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
    gpg --batch --verify /tmp/gosu.asc /tmp/gosu; \
    command -v gpgconf && gpgconf --kill all || :; \
    rm -rf "$GNUPGHOME" /tmp/gosu.asc; \
    chmod +x /tmp/gosu ; \
    mv /tmp/gosu /usr/local/bin/gosu; \
# verify that the binary works
    gosu --version; \
    gosu nobody true;

RUN dnf install -y epel-release 'dnf-command(copr)' 'dnf-command(config-manager)' ; \
    dnf -y config-manager --set-enabled crb ; \
#    dnf -y copr --hub build.almalinux.org enable eabdullin1/openqa ; \
# copr bug, always points to x84_64 repo results error in other arch
    curl -L https://build.almalinux.org/pulp/content/copr/eabdullin1-openqa-almalinux-9-$(arch)-dr/config.repo -o /etc/yum.repos.d/openqa.repo ; \
    dnf install --nodocs --setopt install_weak_deps=false -y shadow-utils shadow-utils-subid \
      sudo git-core nano which psmisc nfs-utils iputils postgresql \
      zip xz rsync withlock catatonit-0.1.7 tini; \
    dnf clean all ; 

FROM scratch 
COPY --from=stage2 / /

ENV LANG=C.utf8

RUN groupadd -r -g 700 geekotest; \
    groupadd -r -g 701 _openqa-worker; \
    groupadd -r -g 703 qemu; \
    groupadd -r -g 704 libvirt; \
    useradd -r -g 700 -u 700 -c "openQA user" -m -d /var/lib/openqa geekotest; \
    usermod -aG wheel,qemu,libvirt,kvm -v 3100001-3300000 -w 3100001-3300000  geekotest; \
    useradd -r -g 701 -u 701 -c "openQA worker" -m -d /var/lib/empty  _openqa-worker; \
    usermod -aG wheel,qemu,libvirt,kvm -v 3300001-3500000 -w 3300001-3500000 _openqa-worker; \
    mkdir -p /etc/sudoers.d ; \
    echo "geekotest ALL=(ALL)     NOPASSWD: ALL" > /etc/sudoers.d/geekotest ; \
    echo "_openqa-worker ALL=(ALL)     NOPASSWD: ALL" > /etc/sudoers.d/openqawk ; \
#    systemctl set-default multi-user.target; \
    ln -sf /usr/libexec/catatonit /usr/local/bin/catatonit ;

# VOLUME [ "/sys/fs/cgroup" ]

CMD [ "/sbin/init" ]
